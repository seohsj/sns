create table user
(
    user_id  bigint generated by default as identity,
    username varchar(255) not null,
    password varchar(255) not null,
    primary key (user_id),
    unique (username)
);

create table photo
(
    photo_id           bigint generated by default as identity,
    user_id            bigint,
    content            clob,
    created_date       timestamp,
    image_path         clob,
    last_modified_date timestamp,
    primary key (photo_id),
    foreign key (user_id) references user (user_id)
);



create table comment
(
    comment_id bigint generated by default as identity,
    content    clob,
    user_id    bigint,
    photo_id   bigint,
    primary key (comment_id),
    foreign key (user_id) references user (user_id),
    foreign key (photo_id) references photo (photo_id)
);

create table follow
(
    follow_id bigint generated by default as identity,
    who_id    bigint,
    whom_id   bigint,
    primary key (follow_id),
    foreign key (who_id) references user (user_id),
    foreign key (whom_id) references user (user_id)
);
create table likes
(
    likes_id bigint generated by default as identity,
    photo_id bigint,
    user_id  bigint,
    primary key (likes_id),
    foreign key (photo_id) references photo (photo_id),
    foreign key (user_id) references user (user_id)
);
create table tag
(
    tag_id bigint generated by default as identity,
    tag    varchar(255),
    primary key (tag_id)
);
create table photo_tag
(
    photo_tag_id bigint generated by default as identity,
    photo_id     bigint,
    tag_id       bigint,
    primary key (photo_tag_id),
    foreign key (photo_id) references photo (photo_id),
    foreign key (tag_id) references tag (tag_id)
);
create table mentioned_user
(
    photo_user_id     bigint generated by default as identity,
    mentioned_user_id bigint,
    photo_id          bigint,
    primary key (photo_user_id),
    foreign key (mentioned_user_id) references user (user_id),
    foreign key (photo_id) references photo (photo_id)

);